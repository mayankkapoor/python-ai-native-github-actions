name: AI Code Review and Test Suggestions

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  build-and-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Unit Tests
      run: |
        python -m pytest tests/

    - name: Extract Git Diff
      id: get_diff
      run: |
        git diff HEAD^ HEAD > pr_diff.txt
        echo "diff<<EOF" >> $GITHUB_OUTPUT
        cat pr_diff.txt >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Generate Code Review
      id: ai_review
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        echo "Debug: Reading diff content..."
        DIFF_CONTENT=$(cat pr_diff.txt)
        echo "Debug: Diff content length: ${#DIFF_CONTENT}"
        
        echo "Debug: Preparing API call..."
        RESPONSE=$(curl -v https://api.openai.com/v1/chat/completions \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $OPENAI_API_KEY" \
          -d '{
            "model": "gpt-4o-mini",
            "messages": [
              {
                "role": "system",
                "content": "You are an expert code reviewer. Analyze the code changes and provide detailed feedback on code quality, potential issues, and suggestions for improvement."
              },
              {
                "role": "user",
                "content": "Please review these code changes:\n\n'"${DIFF_CONTENT}"'"
              }
            ],
            "temperature": 0.7
          }')
        
        echo "Debug: Raw API Response:"
        echo "$RESPONSE"
        
        echo "Debug: Extracted content:"
        CONTENT=$(echo "$RESPONSE" | jq -r '.choices[0].message.content')
        echo "$CONTENT"
        
        echo "review_content<<EOF" >> $GITHUB_OUTPUT
        echo "$CONTENT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Post Review Comment
      uses: actions/github-script@v6
      with:
        script: |
          const reviewContent = process.env.REVIEW_CONTENT;
          const comment = `## AI Code Review Feedback\n\n${reviewContent}`;
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: comment
          });
      env:
        REVIEW_CONTENT: ${{ steps.ai_review.outputs.review_content }}